<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!-- 加载配置文件 -->
    <!--<properties resource="application.properties"/>-->

    <!-- 一个数据库一个context,context的子元素必须按照它给出的顺序
        property,plugin,commentGenerator,jdbcConnection,javaTypeResolver,
        javaModelGenerator,sqlMapGenerator,javaClientGenerator,table
    -->
    <!--defaultModelType="flat" 一张表对应一个实体类 -->
    <context id="mysqlContext" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="autoDelimitKeywords" value="true"/>
        <!-- 可以使用``包括字段名，避免字段名与sql保留字冲突报错 -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <property name="javaFileEncoding" value="utf-8"/>

        <!-- 自动生成时覆盖mapper.xml -->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin" />
        <!-- 序列化插件 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <!-- 自定义lombok插件-->
        <plugin type="org.mybatis.generator.plugins.LombokPlugin"/>
        <!-- 自定义注释插件 -->
        <plugin type="org.mybatis.generator.plugins.CommentPlugin"/>
        <!-- 自定义生成继承mapper插件 -->
        <plugin type="org.mybatis.generator.plugins.ExtendMapperPlugin">
            <!-- mapper.xml的路径 -->
            <property name="xmlPath" value="G:\JAVA_S\project\enshrine-projectname-servicename/enshrine-projectname-servicename-dao/src/main/resources/mapper/extend"/>
            <!-- mapper.java的路径 -->
            <property name="javaPath" value="G:\JAVA_S\project\enshrine-projectname-servicename/enshrine-projectname-servicename-dao/src/main/java/link/enshrine/projectname/servicename/dao/mapper/extend"/>
            <!-- mapper.xml中的namespace -->
            <property name="namespace" value="link.enshrine.projectname.servicename.dao.mapper.extend"/>
            <!-- mapper.xml中的extends 也就是被继承的mapper.xml的全路径类名 -->
            <property name="extends" value="link.enshrine.projectname.servicename.dao.mapper.base"/>
            <!-- 实体类全路径类名 -->
            <property name="type" value="link.enshrine.projectname.servicename.dao.model.dto"/>
        </plugin>

        <!-- 注释 -->
        <commentGenerator>
            <!-- 是否取消全部注释 -->
            <property name="suppressAllComments" value="true"/>
            <!-- 是否取消生成时间戳注释 -->
            <!--<property name="suppressDate" value="true" />-->
            <!-- 添加 db 表中字段的注释 默认false-->
            <!--<property name="addRemarkComments" value="true"/>-->
        </commentGenerator>

        <!--数据库配置-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://124.223.71.190:3306/databasename?useUnicode=true&amp;characterEncoding=UTF8&amp;autoReconnect=true&amp;useSSL=false&amp;serverTimezone=UTC%2B8"
                        userId="dev"
                        password="devpassword">
            <!-- 5.7以上mysql需要添加此属性 -->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal,默认false -->
            <!-- false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer -->
            <!-- true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal -->
            <property name="forceBigDecimals" value="true"/>
            <!-- 默认false
                 false，将所有 JDBC 的时间类型解析为 java.util.Date
                 true，将 JDBC 的时间类型按如下规则解析
                 DATE	                 -> java.time.LocalDate
                 TIME	                 -> java.time.LocalTime
                 TIMESTAMP               -> java.time.LocalDateTime
                 TIME_WITH_TIMEZONE  	 -> java.time.OffsetTime
                 TIMESTAMP_WITH_TIMEZONE -> java.time.OffsetDateTime
            -->
            <property name="useJSR310Types" value="true"/>
        </javaTypeResolver>

        <!--生成实体类存放位置-->
        <javaModelGenerator targetPackage="link.enshrine.projectname.servicename.dao.model.dto" targetProject="src/main/java">
            <!-- 是否让schema作为包的后缀，默认为false -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否针对string类型的字段在set方法中进行修剪，默认false -->
            <property name="trimStrings" value="false"/>
        </javaModelGenerator>

        <!-- 生成mapper.xml文件的路径 -->
        <sqlMapGenerator targetPackage="mapper/base" targetProject="src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成mapper.xml对应client，也就是XxxMapper.java 文件的路径 -->
        <!-- type="XMLMAPPER" 会将接口的实现放在 mapper.xml中，也推荐这样配置。
        也可以设置 type 为其他值，比如 type="ANNOTATEDMAPPER"，接口的实现通过注解写在接口上面 -->
        <javaClientGenerator targetPackage="link.enshrine.projectname.servicename.dao.mapper.base" targetProject="src/main/java"
                             type="XMLMAPPER">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- schema为数据库名，oracle需要配置，mysql不需要配置。
         tableName为对应的数据库表名
         domainObjectName 是要生成的实体类名 不配置时，它会按照帕斯卡命名法将表名转换成类名
         enableXXXByExample 默认为 true，但只有在targetRuntime="MyBatis3"时才生效，为 true 会生成一个对应实体类的Example帮助类，帮助你进行条件查询
         sqlStatement：查询主键的SQL语句，例如填写了MySql，则使用SELECT LAST_INSERT_ID()
         identity：true的时候，指定selectKey标签的order为AFTER 默认false
         type：可选值为pre或者post，pre指定selectKey标签的order为BEFORE，post指定selectKey标签的order为AFTER
         -->
        <table tableName="bbs_user" domainObjectName="User">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
    </context>
</generatorConfiguration>